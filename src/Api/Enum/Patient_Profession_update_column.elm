-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.Patient_Profession_update_column exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| update columns of table "Patient\_Profession"

  - Date\_de\_debut - column name
  - Date\_de\_fin - column name
  - Id\_patient - column name
  - Id\_profession - column name

-}
type Patient_Profession_update_column
    = Date_de_debut
    | Date_de_fin
    | Id_patient
    | Id_profession


list : List Patient_Profession_update_column
list =
    [ Date_de_debut, Date_de_fin, Id_patient, Id_profession ]


decoder : Decoder Patient_Profession_update_column
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "date_de_debut" ->
                        Decode.succeed Date_de_debut

                    "date_de_fin" ->
                        Decode.succeed Date_de_fin

                    "id_patient" ->
                        Decode.succeed Id_patient

                    "id_profession" ->
                        Decode.succeed Id_profession

                    _ ->
                        Decode.fail ("Invalid Patient_Profession_update_column type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Patient_Profession_update_column -> String
toString enum =
    case enum of
        Date_de_debut ->
            "date_de_debut"

        Date_de_fin ->
            "date_de_fin"

        Id_patient ->
            "id_patient"

        Id_profession ->
            "id_profession"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Patient_Profession_update_column
fromString enumString =
    case enumString of
        "date_de_debut" ->
            Just Date_de_debut

        "date_de_fin" ->
            Just Date_de_fin

        "id_patient" ->
            Just Id_patient

        "id_profession" ->
            Just Id_profession

        _ ->
            Nothing
