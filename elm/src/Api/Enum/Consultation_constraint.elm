-- Do not manually edit this file, it was auto-generated by dillonkearns/elm-graphql
-- https://github.com/dillonkearns/elm-graphql


module Api.Enum.Consultation_constraint exposing (..)

import Json.Decode as Decode exposing (Decoder)


{-| unique or primary key constraints on table "Consultation"

  - Consultation\_indice\_anxiete\_key - unique or primary key constraint
  - Consultation\_mots\_cles\_key - unique or primary key constraint
  - Consultation\_pkey - unique or primary key constraint

-}
type Consultation_constraint
    = Consultation_indice_anxiete_key
    | Consultation_mots_cles_key
    | Consultation_pkey


list : List Consultation_constraint
list =
    [ Consultation_indice_anxiete_key, Consultation_mots_cles_key, Consultation_pkey ]


decoder : Decoder Consultation_constraint
decoder =
    Decode.string
        |> Decode.andThen
            (\string ->
                case string of
                    "Consultation_indice_anxiete_key" ->
                        Decode.succeed Consultation_indice_anxiete_key

                    "Consultation_mots_cles_key" ->
                        Decode.succeed Consultation_mots_cles_key

                    "Consultation_pkey" ->
                        Decode.succeed Consultation_pkey

                    _ ->
                        Decode.fail ("Invalid Consultation_constraint type, " ++ string ++ " try re-running the @dillonkearns/elm-graphql CLI ")
            )


{-| Convert from the union type representating the Enum to a string that the GraphQL server will recognize.
-}
toString : Consultation_constraint -> String
toString enum =
    case enum of
        Consultation_indice_anxiete_key ->
            "Consultation_indice_anxiete_key"

        Consultation_mots_cles_key ->
            "Consultation_mots_cles_key"

        Consultation_pkey ->
            "Consultation_pkey"


{-| Convert from a String representation to an elm representation enum.
This is the inverse of the Enum `toString` function. So you can call `toString` and then convert back `fromString` safely.

    Swapi.Enum.Episode.NewHope
        |> Swapi.Enum.Episode.toString
        |> Swapi.Enum.Episode.fromString
        == Just NewHope

This can be useful for generating Strings to use for <select> menus to check which item was selected.

-}
fromString : String -> Maybe Consultation_constraint
fromString enumString =
    case enumString of
        "Consultation_indice_anxiete_key" ->
            Just Consultation_indice_anxiete_key

        "Consultation_mots_cles_key" ->
            Just Consultation_mots_cles_key

        "Consultation_pkey" ->
            Just Consultation_pkey

        _ ->
            Nothing
